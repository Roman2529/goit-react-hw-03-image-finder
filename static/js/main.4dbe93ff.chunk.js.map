{"version":3,"sources":["components/styles.module.css","components/searchBar/SearchBar.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/loader/Loader.js","components/button/Button.js","components/modal/Modal.js","components/App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","className","styles","SearchForm","e","preventDefault","FormData","target","forEach","value","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","name","placeholder","ImageGalleryItem","fetchImages","toggleModal","imageObj","console","log","onClick","webformatURL","src","alt","ImageGalleryItemImage","ImageGallery","images","map","img","key","id","ropTypes","PropTypes","object","isRequired","func","Spinner","ButtonNew","color","height","width","Button","getImages","Modal","hiddenModal","largeImageURL","Overlay","currentTarget","API_KEY","App","state","search","loading","showModal","originalImageURL","page","error","setState","axios","get","then","response","prevState","data","hits","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","getSearch","ShowModal","url","this","prevProps","prevQuery","nextQuery","SearchBar","length","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4dbe93ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__3DmK1\",\"Searchbar\":\"styles_Searchbar__1eFFw\",\"SearchForm\":\"styles_SearchForm__2OLZB\",\"SearchFormButton\":\"styles_SearchFormButton__2ldPa\",\"SearchFormButtonLabel\":\"styles_SearchFormButtonLabel__fAB64\",\"SearchFormInput\":\"styles_SearchFormInput__2gXSD\",\"ImageGallery\":\"styles_ImageGallery__3CA3z\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3CCKf\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__zCdm8\",\"Overlay\":\"styles_Overlay__a-7Sy\",\"Modal\":\"styles_Modal__2tHac\",\"Button\":\"styles_Button__2N-Ms\",\"ButtonNew\":\"styles_ButtonNew__p0sSH\"};","import React from 'react';\r\nimport styles from '../styles.module.css';\r\n\r\n function Searchbar({ onSubmit }) {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    formData.forEach((value) => {\r\n      onSubmit(value)\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            name=\"search\"\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\nexport default Searchbar\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../styles.module.css';\r\n\r\nexport function ImageGalleryItem({ fetchImages, toggleModal, imageObj }) {\r\n  console.log(imageObj);\r\n  const handleClick = () => {\r\n    toggleModal();\r\n    fetchImages(imageObj.webformatURL);\r\n  };\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        onClick={handleClick}\r\n        src={imageObj.webformatURL}\r\n        alt=\"GalleryImage\"\r\n        className={styles.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.ropTypes = {\r\n  imageObj: PropTypes.object.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  fetchImages: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { ImageGalleryItem } from '../imageGalleryItem/ImageGalleryItem.js';\r\nimport PropTypes, { object } from 'prop-types';\r\nimport styles from '../styles.module.css';\r\n\r\nexport function ImageGallery({ fetchImages, images, toggleModal }) {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {images.map(img => (\r\n        <ImageGalleryItem\r\n          fetchImages={fetchImages}\r\n          toggleModal={toggleModal}\r\n          imageObj={img}\r\n          key={img.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(object).isRequired,\r\n};\r\n","import React from 'react';\r\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from '../styles.module.css';\r\nexport function Spinner() {\r\n  return (\r\n    <div className={styles.ButtonNew}>\r\n      <Loader type=\"Rings\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from '../styles.module.css';\r\n\r\nexport function Button({ getImages }) {\r\n  return (\r\n    <div className={styles.ButtonNew}>\r\n      <button className={styles.Button} onClick={getImages}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from '../styles.module.css';\r\n\r\nexport function Modal({ hiddenModal, largeImageURL }) {\r\n  const handleClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      hiddenModal();\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.Overlay} onClick={handleClick}>\r\n      <div className={styles.Modal}>\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport  SearchBar  from './searchBar/SearchBar.js';\r\nimport { ImageGallery } from './imageGallery/ImageGallery.js';\r\nimport styles from './styles.module.css';\r\nimport { Spinner } from './loader/Loader.js';\r\nimport { Button } from './button/Button';\r\nimport { Modal } from './modal/Modal.js';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = '17949255-e1d9ea9bdf94a67d1d5d88a2d';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    images: [],\r\n    search: '',\r\n    loading: false,\r\n    showModal: false,\r\n    originalImageURL: '',\r\n    page: 1,\r\n    error: null,\r\n  };\r\n  \r\n  componentDidMount() {\r\n    if (this.state.search) {\r\n      this.getImages(this.state.search);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.search;\r\n    const nextQuery = this.state.search;\r\n    if (prevQuery !== nextQuery) {\r\n      this.getImages(nextQuery);\r\n    }\r\n  }\r\n\r\n  getImages = () => {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(\r\n        `https://pixabay.com/api/?q=${this.state.search}&page=${this.state.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...response.data.hits],\r\n          loading: false,\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        this.setState({ loading: false });\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n  getSearch = search => {\r\n    this.setState({ search, images: [], page: 1 });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ ShowModal }) => ({ showModal: !ShowModal }));\r\n  };\r\n\r\n  hiddenModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  fetchImages = url => {\r\n    this.setState({ originalImageURL: url });\r\n  };\r\n\r\n  render() {\r\n    const { originalImageURL, images, showModal, loading } = this.state;\r\n    return (\r\n      <div className={styles.App}>\r\n        <SearchBar onSubmit={this.getSearch} />\r\n        <ImageGallery\r\n          fetchImages={this.fetchImages}\r\n          toggleModal={this.toggleModal}\r\n          images={images}\r\n        />\r\n        {loading && <Spinner />}\r\n        {images.length > 0 && !loading && <Button getImages={this.getImages} />}\r\n        {showModal && (\r\n          <Modal\r\n            hiddenModal={this.hiddenModal}\r\n            largeImageURL={originalImageURL}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App.js';\nimport './components/styles.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}